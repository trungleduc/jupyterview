// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Main component should render correctly with mock props 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
    }
  }
>
  <Blueprint3.Navbar
    className="bp3-dark"
  >
    <Blueprint3.NavbarGroup
      align="right"
    >
      <Blueprint3.NavbarHeading>
        JupyterView
      </Blueprint3.NavbarHeading>
      <Blueprint3.NavbarDivider />
      <Blueprint3.Button
        className="bp3-minimal"
        icon="document"
        onClick={[Function]}
        text="Local"
      />
      <Blueprint3.Button
        className="bp3-minimal"
        icon="cloud"
        onClick={[Function]}
        text="Remote"
      />
      <Blueprint3.Button
        className="bp3-minimal"
        icon="cog"
        text="Setting"
      />
    </Blueprint3.NavbarGroup>
  </Blueprint3.Navbar>
  <div
    style={
      Object {
        "display": "flex",
        "flexGrow": 1,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <Resizable
      defaultSize={
        Object {
          "height": "100%",
          "width": "25%",
        }
      }
      enable={
        Object {
          "bottom": false,
          "bottomLeft": false,
          "bottomRight": false,
          "left": false,
          "right": true,
          "top": false,
          "topLeft": false,
          "topRight": false,
        }
      }
      grid={
        Array [
          1,
          1,
        ]
      }
      lockAspectRatio={false}
      lockAspectRatioExtraHeight={0}
      lockAspectRatioExtraWidth={0}
      maxWidth="70%"
      minWidth={220}
      onResize={[Function]}
      onResizeStart={[Function]}
      onResizeStop={[Function]}
      resizeRatio={1}
      scale={1}
      snapGap={0}
      style={Object {}}
    >
      <div
        style={
          Object {
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <Resizable
          defaultSize={
            Object {
              "height": "40%",
              "width": "100%",
            }
          }
          enable={
            Object {
              "bottom": true,
              "bottomLeft": false,
              "bottomRight": false,
              "left": false,
              "right": false,
              "top": false,
              "topLeft": false,
              "topRight": false,
            }
          }
          grid={
            Array [
              1,
              1,
            ]
          }
          lockAspectRatio={false}
          lockAspectRatioExtraHeight={0}
          lockAspectRatioExtraWidth={0}
          onResize={[Function]}
          onResizeStart={[Function]}
          onResizeStop={[Function]}
          resizeRatio={1}
          scale={1}
          snapGap={0}
          style={Object {}}
        >
          <div
            style={
              Object {
                "height": "100%",
                "padding": "5px 0px 5px 5px",
                "width": "100%",
              }
            }
          >
            <Blueprint3.Card
              elevation={1}
              interactive={false}
              style={
                Object {
                  "background": "aliceblue",
                  "border": "solid grey 1px",
                  "borderBottom": "solid #106ba3",
                  "borderRadius": "5px",
                  "display": "flex",
                  "flexDirection": "column",
                  "height": "100%",
                  "overflow": "auto",
                  "padding": "0px",
                }
              }
            >
              <div
                style={
                  Object {
                    "background": "rgb(16, 107, 163)",
                    "color": "aliceblue",
                    "height": "25px",
                    "padding": "2px",
                    "width": "100%",
                  }
                }
              >
                PIPELINES
              </div>
              <Connect(Pipelines)
                model={
                  MockModel {
                    "_callbacks": Object {},
                    "_value": Object {},
                  }
                }
                send_msg={[Function]}
              />
            </Blueprint3.Card>
          </div>
        </Resizable>
        <div
          style={
            Object {
              "height": "60%",
              "padding": "5px 0px 5px 5px",
            }
          }
        >
          <Blueprint3.Card
            elevation={1}
            interactive={false}
            style={
              Object {
                "background": "aliceblue",
                "border": "solid grey 1px",
                "borderRadius": "5px",
                "height": "100%",
                "overflow": "auto",
                "padding": "0px",
              }
            }
          >
            <LeftPanel
              selectedId={0}
            />
          </Blueprint3.Card>
        </div>
      </div>
    </Resizable>
    <div
      style={
        Object {
          "height": "100%",
          "padding": "5px",
          "width": "100%",
        }
      }
    >
      <Blueprint3.Card
        elevation={1}
        interactive={false}
        style={
          Object {
            "background": "aliceblue",
            "border": "solid grey 1px",
            "height": "100%",
            "overflow": "auto",
            "padding": "5px",
            "width": "100%",
          }
        }
      >
        <Connect(VtkWidget)
          inputOpenFileRef={
            Object {
              "current": null,
            }
          }
          model={
            MockModel {
              "_callbacks": Object {},
              "_value": Object {},
            }
          }
          send_msg={[Function]}
          updateProgress={[Function]}
        />
      </Blueprint3.Card>
    </div>
  </div>
  <Blueprint3.Dialog
    canOutsideClickClose={true}
    icon="info-sign"
    isOpen={false}
    onClose={[Function]}
    style={
      Object {
        "width": "50vw",
      }
    }
    title="Open remote files"
  >
    <div
      className="bp3-dialog-body"
    >
      <RemoteFileBrowser
        browserRef={
          Object {
            "current": null,
          }
        }
        model={
          MockModel {
            "_callbacks": Object {},
            "_value": Object {},
          }
        }
        send_msg={[Function]}
      />
    </div>
    <div
      className="bp3-dialog-footer"
    >
      <div
        className="bp3-dialog-footer-actions"
      >
        <Blueprint3.Button
          onClick={[Function]}
        >
          Close
        </Blueprint3.Button>
        <Blueprint3.AnchorButton
          intent="primary"
          onClick={[Function]}
        >
          Open
        </Blueprint3.AnchorButton>
      </div>
    </div>
  </Blueprint3.Dialog>
  <ProgressNotification
    open={false}
    value={0}
  />
</div>
`;
